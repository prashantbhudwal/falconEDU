"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getModelContextSize = exports.calculateMaxTokens = exports.BaseLanguageModel = exports.BaseLangChain = void 0;
var language_model_1 = require("langchain-core/schema/language_model");
Object.defineProperty(exports, "BaseLangChain", { enumerable: true, get: function () { return language_model_1.BaseLangChain; } });
Object.defineProperty(exports, "BaseLanguageModel", { enumerable: true, get: function () { return language_model_1.BaseLanguageModel; } });
/*
 * Export utility functions for token calculations:
 * - calculateMaxTokens: Calculate max tokens for a given model and prompt (the model context size - tokens in prompt).
 * - getModelContextSize: Get the context size for a specific model.
 */
var count_tokens_js_1 = require("./count_tokens.cjs");
Object.defineProperty(exports, "calculateMaxTokens", { enumerable: true, get: function () { return count_tokens_js_1.calculateMaxTokens; } });
Object.defineProperty(exports, "getModelContextSize", { enumerable: true, get: function () { return count_tokens_js_1.getModelContextSize; } });
