import http from 'node:http';
import { n as nodeHTTPRequestHandler } from '../nodeHTTPRequestHandler-d2566b0f.mjs';
import '../transformTRPCResponse-31040a38.mjs';
import '../codes-c924c3db.mjs';
import '../resolveHTTPResponse-f4d7dd9a.mjs';
import '../router-f0c73097.mjs';
import '../TRPCError-689e79f1.mjs';
import '../index-a9e3e610.mjs';
import '../config-50853f49.mjs';
import '../contentType-778b33c3.mjs';
import '../batchStreamFormatter-fc1ffb26.mjs';
import './node-http/content-type/json/index.mjs';
import '../contentType-3194ed5f.mjs';

function createHTTPHandler(opts) {
    return async (req, res)=>{
        // Get procedure path and remove the leading slash, `/procedure -> procedure`
        // Use dummy hostname if one is not provided.
        const path = new URL(req.url, 'http://127.0.0.1').pathname.slice(1);
        await nodeHTTPRequestHandler({
            ...opts,
            req,
            res,
            path
        });
    };
}
function createHTTPServer(opts) {
    const handler = createHTTPHandler(opts);
    return http.createServer((req, res)=>handler(req, res));
}

export { createHTTPHandler, createHTTPServer };
