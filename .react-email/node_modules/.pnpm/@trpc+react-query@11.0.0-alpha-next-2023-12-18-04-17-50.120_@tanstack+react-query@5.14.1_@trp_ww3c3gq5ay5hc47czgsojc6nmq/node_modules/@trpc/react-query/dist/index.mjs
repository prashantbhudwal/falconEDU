export * from '@trpc/client';
import { c as createReactQueryUtils } from './utilsProxy-00894da2.mjs';
export { g as getQueryKey } from './utilsProxy-00894da2.mjs';
import { createFlatProxy } from '@trpc/server/shared';
import { useMemo } from 'react';
import { c as createRootHooks, a as createReactDecoration } from './createHooksInternal-90cbc58b.mjs';
import '@tanstack/react-query';

/**
 * @internal
 */ function createHooksInternal(trpc) {
    return createFlatProxy((key)=>{
        if (key === 'useContext' || key === 'useUtils') {
            return ()=>{
                const context = trpc.useUtils();
                // create a stable reference of the utils context
                return useMemo(()=>{
                    return createReactQueryUtils(context);
                }, [
                    context
                ]);
            };
        }
        if (trpc.hasOwnProperty(key)) {
            return trpc[key];
        }
        return createReactDecoration(key, trpc);
    });
}
function createTRPCReact(opts) {
    const hooks = createRootHooks(opts);
    const proxy = createHooksInternal(hooks);
    return proxy;
}

export { createTRPCReact };
